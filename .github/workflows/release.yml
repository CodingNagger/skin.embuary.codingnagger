name: Build and Release Kodi Add-on

on:
  push:
    branches:
      - master

env:
  ADDON_NAME: skin.embuary.codingnagger

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install required tools (e.g., zip)
      - name: Install zip
        run: sudo apt-get install zip

      # Generate the version using Codacy git-version
      - name: Generate version
        id: version
        uses: codacy/git-version@2.8.0
        with:
          tag-prefix: "v"  # Optional: customize if you have a different tag pattern

      # Prepare the add-on directory structure
      - name: Prepare Add-on Directory
        run: |
            mkdir -p ${ADDON_NAME}
            cp -r * ${ADDON_NAME}/
            cd ${ADDON_NAME}
            rm -rf .git .github *.psd  # Exclude unnecessary files

      # Create ZIP file for the Kodi add-on
      - name: Create ZIP package
        run: |
          cd ..
          zip -r ${{ env.ADDON_NAME }}-${{ github.run_number }}.zip ${ADDON_NAME}

      # Upload the generated ZIP file as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: addon-zip
          path: ${{ env.ADDON_NAME }}-${{ steps.version.outputs.version }}.zip

      # Create a Git tag
      - name: Create Tag
        id: tag
        run: |
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

      # Create a GitHub release using the generated version
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "Release ${{ steps.version.outputs.version }}"
          files: ${{ env.ADDON_NAME }}-${{ steps.version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

