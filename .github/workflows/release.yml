name: Build and Release Kodi Add-on

on:
  push:
    branches:
      - master

env:
  ADDON_NAME: skin.embuary.codingnagger

jobs:
  build:
    name: Build Add-on
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python (Kodi add-ons use Python)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install required tools (e.g., zip)
      - name: Install zip
        run: sudo apt-get install zip

      # Generate the version using Codacy git-version
      - name: Generate version
        id: version
        uses: codacy/git-version@v3
        with:
          tag-prefix: "v"  # Optional: customize if you have a different tag pattern

      # Create ZIP file for the Kodi add-on
      - name: Create ZIP package
        run: |
          zip -r ${{ env.ADDON_NAME }}-${{ steps.version.outputs.version }}.zip * -x .git .github

      # Upload the generated ZIP file as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: addon-zip
          path: ${{ env.ADDON_NAME }}-${{ steps.version.outputs.version }}.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download the ZIP artifact from the build job
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: addon-zip
          path: .

      # Create a GitHub release using the generated version
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}   # Use the version from codacy/git-version
          name: "Release ${{ steps.version.outputs.version }}"
          files: ${{ env.ADDON_NAME }}-${{ steps.version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

